# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3

        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"
          github_access_token: ${{ secrets.GITHUB_TOKEN }}

      - run: npm ci
        working-directory: ./app
      - run: npm run finalBuild --if-present
        working-directory: ./app
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: All things angular
        uses: AhsanAyaz/angular-deploy-gh-pages-actions@1.0.5 ## replace by latest version without it you will see Expected format {org}/{repo}[/path]@ref. Actual 'AhsanAyaz/angular-deploy-gh-pages-actions',Input string was not in a correct format.
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }} # see the Configuration section for how you can create secrets
          build_configuration: main # The build environment for the app. please look configurations in your angular.json
          base_href: /ds-tokens/ # make sure this corresponds to https://<your_username>.github.io/<base_href>/
          deploy_branch: gh-pages # The branch the action should deploy to.
          angular_dist_build_folder: app/dist/app # The folder where your project is supposed to be after running ng build by the action.

permissions:
  contents: write
